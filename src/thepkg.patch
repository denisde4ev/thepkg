@--- thepkg
@+++ thepkg-mixed
@@ -1,125 +1,131 @@
 #!/bin/sh
 
 # thepkg config / env vars:
 : "${THEPKG_PREFIX:=""}"
 : "${THEPKG_DBPATH:="$THEPKG_PREFIX/var/db/thepkg"}"
-# [patch: thepkg-subdir-prefix] thepkg config / env vars
+: "${THEPKG_SUBDIR_PREFIX:=""}"
 
 
 set -e
 
 # env parsing:
-# [patch: thepkg-subdir-prefix] env parsing
+case $THEPKG_SUBDIR_PREFIX in /*) err "env var \$THEPKG_SUBDIR_PREFIX is not allowed to be in /*"; esac
 
 # thepkg reqired dir / files:
 [ -d "${THEPKG_PREFIX?}" ] || mkdir -pv "${THEPKG_PREFIX:-/}"
 [ -d "${THEPKG_DBPATH?}" ] || mkdir -pv "$THEPKG_DBPATH"
-# [patch: thepkg-subdir-prefix] thepkg reqired dir / files:
+case ${THEPKG_SUBDIR_PREFIX:+x} in x)
+	[ -d "$THEPKG_PREFIX/$THEPKG_SUBDIR_PREFIX" ] || \
+	mkdir -pv "${THEPKG_PREFIX:-/}/$THEPKG_SUBDIR_PREFIX"
+esac
 
 
 # thepkg log fns:
 log() { printf %s\\n " -> $1"; }
-err() { printf %s\\n >&2 " x> $1"; exit ${2-2}; } # [patch: thepkg-noerr-stat0]
+err() { printf %s\\n >&2 " x> $1"; [ ${2-2} -eq 0 ] || exit ${2-2}; }
 
 
 # args parsing:
 case $1 in
 	-h|--help)
 		printf %s\\n \
 			"Usage: ${0##*/} <add|del> </path/to/thepkgname.tar.qz | thepkgname.tar | thepkgname>" \
 			"" \
 			"[patches applyed: {TODO: for now not separated per package path for help info}" \
+			"  (not tested)" \
+			"  [thepkg-addfromtar]" \
+			"    install from tar and use (tar -a) autodetect if its for example '.tar.gz'." \
+			"    thepkgname may be: </path/to/thepkgname.tar.qz | thepkgname.tar | thepkgname>" \
+			"" \
+			"  (not done)" \
+			"  [thepkg-thepkgver-arg-parsing]" \
+			"    thepkgname may be <thepkgname@v1.0.0>" \
+			"" \
+			"  (not done)" \
+			"  [thepkg-subdir-prefix]" \
+			"    use env var \$THEPKG_SUBDIR_PREFIX as \$THEPKG_PREFIX sub dir," \
+			"    but stil write it to \$THEPKG_DBPATH/manifest file" \
+			"" \
+			"  (internal)" \
+			"  (not done at all)" \
+			"  [thepkg-args-parsing-loop]" \
+			"    prepare code for args parsing patches" \
+			"" \
+			"  (requires: thepkg-args-parsing-loop)" \
+			"  (not done at all)" \
+			"  [thepkg-metadata]" \
+			"    when thepkgname is in (*.thepkg.*|*.thepkg) or --metadata used. then metadata is read from the start of the file" \
+			"" \
+			"  (not done at all)" \
+			"  [thepkg-keep-etc]" \
+			"    keep files from /env, exept when --nosave is specifyed" \
+			"" \
+			"  (not done at all)" \
+			"  [thepkg-metadata-thepkg-ext]" \
+			"    parse '*.thepkg' file that contains metadata about the package" \
+			"    used only when extention is (*.thepkg) or when --thepkg-metadata specifyed" \
+			"    .thepkg file is tar file with prepended metadata prepended data" \
+			"" \
+			"  (not done at all)" \
+			"  [thepkg-upgrade]" \
+			"    upgrade package" \
+			"" \
+			"  (done)" \
+			"  (internal)" \
+			"  [thepkg-noerr-stat0]" \
+			"    err fn to not exit when \$2=0" \
+			"" \
+			"  (done)" \
+			"  (requires: thepkg-noerr-stat0)" \
+			"  [thepkg-extended-verbose]" \
+			"    (1 for now!) print longer messages" \
 		; # [patches] help message patches -> patches applyed
 		exit
 	;;
 	'') err "please specify action add/del or see --help";;
 esac
 
 # thepkg args parsing loop:
 # [patch: thepkg-args-parsing-loop] thepkg args parsing loop
 
 case $1 in
 	add|del) action=$1;;
 	-*) err "unknown option '$1'. see --help";;
 	*)  err "unknown action '$1'. see --help";;
 esac
 shift
 
 # thepkg file detection:
-# [patch: thepkg-addfromtar] thepkg file detection
+thepkgname=${1##*/}
+unset tar_file
 case $1 in
 	'') err "please specify thepkgname or see --help";;
-# [patch: thepkg-addfromtar] thepkg file detection -> case
+	*/*|/*.tar|./*.tar|/*.tar.*|./*.tar.*)
+		# note: for `thepkg del thepkgname.tar`
+		# will not look at the tar file at all,
+		# just detects the name from the name
+		tar_file=$1
+		thepkgname=${thepkgname%%".tar"*}
+	;;
 esac
 
 
 # thepkg post file detection:
-# [path: thepkg-thepkgver-arg-parsing] thepkg post file detection
+thepkgver=${thepkgname#*"@"}
+thepkgname=${thepkgname%"@$thepkgver"}
 
 # thepkg action detection:
 case $action in
 add)
 	[ ! -e "$THEPKG_DBPATH/$thepkgname" ] || {
 		err "The pkg '$thepkgname' is already installed" 3
-		# [patch: thepkg-upgrade] add action -> already installed
+		# TODO: # [patch: thepkg-upgrade] add action -> already installed
 	}
 	log "Extracting the pkg '$thepkgname'..."
 	mkdir -v "$THEPKG_DBPATH/$thepkgname"
 
 	# manifest writing:
 	{
 		{
 			# tar -k    don't replace existing files, treat them as errors
 
 			# tar opts:
 			tar_opts=k
-			# [patch: thepkg-addfromtar]
+			tar_opts=${tar_opts}a
 
-			tar_file=- # [patch: thepkg-addfromtar]
+			tar_file=${tar_file:-"-"}
 
-			tar_directory=${THEPKG_PREFIX:-/} # [patch: thepkg-subdir-prefix] tar opts
+			tar_directory=${THEPKG_PREFIX:-/}/$THEPKG_SUBDIR_PREFIX
 
 			# manifest writing -> pre tar extractind
-			tar -xvf "$tar_file" -"$tar_opts" -C "$tar_directory" # [patch: thepkg-addfromtar]
+			tar -xvf "$tar_file" -"$tar_opts" -C "$tar_directory"
 
 		# manifest writing -> post tar extractind
-		# [patch: thepkg-subdir-prefix] manifest writing -> post tar extractind
+		} | {
+			while IFS= read -r file; do printf %s\\n "$THEPKG_SUBDIR_PREFIX/$file"; done
+			case $file in ?*) printf %s\\n "$THEPKG_SUBDIR_PREFIX/$file"; esac
 		} | {
 			tee /dev/stderr
 		} | {
 			# manifest writing -> pre sort
 			sort -r
 			# manifest writing -> post sort
 		}
 	} > "$THEPKG_DBPATH/$thepkgname"/manifest

 	# post manifest, metadata writing:
-	# [patch: thepkg-metadata-thepkg-ext] post manifest, metadata writing
+	# TODO: # [patch: thepkg-metadata-thepkg-ext] post manifest, metadata writing
-	# [patch: thepkg-thepkgver-arg-parsing] post manifest, metadata writing
+	case ${thepkgver:+x} in
+		x) printf "$thepkgver" > "$THEPKG_DBPATH/$thepkgname"/version
+	esac
 
 	# thepkg post install:
-	# [patch: thepkg-addfromtar] thepkg post install
+	# TODO: # [patch: thepkg-addfromtar] thepkg post install
 
 	# test -s   exists and has a size greater than zero
 	[ -s "$THEPKG_DBPATH/$thepkgname"/manifest ] || {
-		err "empty or missing manifest file." # [patch: thepkg-extended-verbose]
+		# detect when went wrong
+		# reason: `tar` is ran in pipe
+		# and exit status is lost in POSIX sh
+		# then exit status would be 0
+
+		printf ' x> %s\n' >&2 \
+			"Extracding the pkg went wrong." \
+			"To remove the empty pkg installed," \
+			"  please run: ${0##*/} del '$thepkgname'" \
+		;
+		exit 3
 	}
 	;;
 del)
 	[ -e "$THEPKG_DBPATH/$thepkgname" ] || {
 		err "The pkg '$thepkgname' is not installed" 2
 	}
 	log "Removing the pkg '$thepkgname'..."
 	(
 		cd "${THEPKG_PREFIX:-/}" || exit
 		while IFS= read -r file || case $file in '') false; esac; do
 			case $file in
-				# [patch: thepkg-keep-etc] del action -> case
+				# TODO: # [patch: thepkg-keep-etc] del action -> case
 				*/)
 					rmdir -v "$file" 2>/dev/null || :
 				;;
 				*)
 					rm -v "$file"
 				;;
 			esac
 		done
 	) < "$THEPKG_DBPATH/$thepkgname"/manifest
 
 	rm -v "$THEPKG_DBPATH/$thepkgname"/manifest
 	# thepkg post manifest removal:
-	# [patch: thepkg-metadata-thepkg-ext] thepkg post manifest removal
+	# TODO: # [patch: thepkg-metadata-thepkg-ext] thepkg post manifest removal
-	# [patch: thepkg-thepkgver-arg-parsing] thepkg post manifest removal
+	[ -e "$THEPKG_DBPATH/$thepkgname"/version ] && rm -v "$THEPKG_DBPATH/$thepkgname"/version

 
 	rmdir -v "$THEPKG_DBPATH/$thepkgname"
 	;;
 *) err "use --help";;
 esac
