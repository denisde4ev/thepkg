#!/bin/sh
set -eu

# unset opt_i
opt_i=''

_makethepkg_log() { printf %s\\n " -> $1"; }
_makethepkg_err() { printf %s\\n >&2 " x> $1"; exit ${2-2}; }

false && case ${FAKEROOTKEY+x} in '')
	_makethepkg_err "please run this script in fakeroot. (or set FAKEROOTKEY env to bypass this check)" 3
esac

unset _thepkgbuild_runned
case $0 in
	*/THEPKGBUILD)
		_thepkgbuild_runned=''
		startdir=${0%/*}
	;;
	# TODO: parse path opion
	*)
		[ -f THEPKGBUILD ] || {
			_makethepkg_err "can not find THEPKGBUILD file" 1
		}

		startdir=.
esac

cd "$startdir" || exit


case $startdir in /*) ;; *) startdir=$PWD/$startdir;; esac # startdir must be absolute path
startdir=${startdir%/.}

[ -d src ] || mkdir src; srcdir=$startdir/src
[ -d pkg ] || mkdir pkg; pkgdir=$startdir/pkg


(
	set -eu
	cd "$pkgdir"

	case $(command -v package) in package) package;; *)
		_makethepkg_err "missing 'package' fn" 1
	esac
)
(
	set -eu
	cd "$pkgdir"
	tar -cvf "$startdir"/"$thepkgname".tar .
)

case ${opt_i+i} in i)
	### case ${USER:-$(id -un)} in root) # TODO: BAD CHECK, WE ARE IN FKEROOT HERE...
		if command -v sudo 2>/dev/null 1>&2; then
			sudo thepkg add "$thepkgname" < "$startdir"/"$thepkgname".tar
		# [patch makethepkg-doas] |=> elif command -v doas 2>/dev/null 1>&2; then
		# [patch makethepkg-doas] |=> 	doas thepkg add "$thepkgname" < "$startdir"/"$thepkgname".tar
		else
			su -c "thepkg add '$thepkgname' < '$startdir/$thepkgname.tar'"
		fi
	###esac
esac
