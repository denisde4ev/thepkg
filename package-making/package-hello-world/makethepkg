#!/bin/sh
set -eu

if [ -d /.\\Windows ]; then
	# busybox-win32
	ln () {
		for i; do set -- "$@" "${i////\\}"; done; shift $(( $# / 2 ))
		sudo busybox ln "$@";
	}
fi

# unset opt_i
opt_i=''

# unset opt_f
opt_f=''

_makethepkg_log() { printf %s\\n " -> $1"; }
_makethepkg_err() { printf %s\\n >&2 " x> $1"; exit ${2-2}; }

false && case ${FAKEROOTKEY+x} in '')
	_makethepkg_err "please run this script in fakeroot. (or set FAKEROOTKEY env to bypass this check)" 3
esac

unset _makethepkg_runned
case $0 in
	*/THEPKGBUILD)
		_makethepkg_runned=''
		startdir=${0%/*}
	;;
	# TODO: parse path opion
	*)
		[ -f ./THEPKGBUILD ] || {
			_makethepkg_err "can not find THEPKGBUILD file" 1
		}

		startdir=.
	;;
esac

cd "$startdir" || exit


case $startdir in /*) ;; *) startdir=$PWD/$startdir;; esac # startdir must be absolute path
startdir=${startdir%/.}

[ -d src ] || mkdir src; srcdir=$startdir/src
if [ -d pkg ]; then
	case ${opt_f+f} in '')
		_makethepkg_log 'PACKAGE ALREADY BILD, exiting'
		exit 0
	esac
else
	mkdir pkg
fi
pkgdir=$startdir/pkg

case ${_makethepkg_runned+x} in '')
	. ./THEPKGBUILD
esac

# test -s   exists and has a size greater than zero
if ! [ -s "$srcdir/${source%%" "*}" ]; then
	_makethepkg_log "downloading/(copying) sources..."
	(
	set -feu
	# IFS # keep the def. IFS=$' \t\n'
	for i in $source; do
		if [ ! -e "$srcdir/$i" ]; then
			ln -sr "$PWD/$i" "$srcdir/"
		fi
	done
	unset i
	)
else
	_makethepkg_log "source is already downloaded/(copied), skiping"
fi

(
	set -eu
	cd "$pkgdir"

	case $(command -v package) in
		package)
			_makethepkg_log "packaging..."
			package
		;;
		*)
			_makethepkg_err "missing 'package' fn" 1
		;;
	esac
)

_makethepkg_log "packing to tar..."
(
	set -eu
	cd "$pkgdir"
	tar -cvf "$startdir"/"$thepkgname".tar .
)

case ${opt_i+i} in i)
	###case ${USER:-$(id -un)} in root) # TODO: BAD CHECK, WE ARE IN FAKEROOT HERE...
		_makethepkg_log "installing..."

		if command -v sudo 2>/dev/null 1>&2; then
			arg  sudo thepkg add "$thepkgname" < "$startdir"/"$thepkgname".tar
		# [patch makethepkg-doas] |=> elif command -v doas 2>/dev/null 1>&2; then
		# [patch makethepkg-doas] |=> 	doas thepkg add "$thepkgname" < "$startdir"/"$thepkgname".tar
		else
			arg  su -c "thepkg add '$thepkgname' < '$startdir/$thepkgname.tar'"
		fi
	###esac
esac
