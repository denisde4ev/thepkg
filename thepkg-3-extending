#!/bin/sh
: "{THEPKG_PREFIX?}" # still experimental, dont use it on real root '/'

set -ue
<<:
"${THEPKG_PREFIX=/}"
"${THEPKG_DBPATH=$THEPKG_PREFIX/var/db/thepkg}"
"${THEPKG_MOD_PATH=${0%/*}/thepkg-mod}"
:

log() { printf ' -> %s\n' "$@"; }
err() { i=$?; printf ' x> %s\n' "$@" >&2; exit $i; }

hasmod() { [ -r "$THEPKG_MOD_PATH/$1" ]; }
runmod() { . "$THEPKG_MOD_PATH/$1"; }


mod() {
	mod_required
	case $mod in
		--required) mod_required=' '; shift;;
	fi
	mod=$1; shift
	if hasmod "$mod"; then
		runmod "$mod"
	else
		case ${2+x} in x)
			err ${mod_required:+"Missing module '$module'"} "$@"
		esac
	fi
}

unset pkgname

action=$1
case $action in
add)
	file=$2 # for now not expecting more arguments?

	case $file in -)
		tmp_file=$(mktemp)
		cat "$file" >"$tmp_file"
		file=$tmp_file
	esac


	# hope we wont get muliple lines/packages in grep
	pkgname=$(
		tar tf "$file" | \
		grep -x "${THEPKG_DBPATH#"$THEPKG_PREFIX/"}"'/[^/]*/version' # THEPKG_PREFIX is not escaped
	) || mod add/add "Not a valid thepkg package"

	pkgname=${pkgname%/version}
	pkgname=${pkgname##*/}

	[ ! -e "$THEPKG_DBPATH/${pkgname:?}" ] || \
		mod add/upgrade "The pkg '$pkgname' is already installed"

	log "Extracting the pkg '$pkgname'..."
	{
		mkdir -p "$THEPKG_DBPATH/$pkgname"
		tar xvf "$2" -C "$THEPKG_PREFIX" | \
		sort -r >"$THEPKG_DBPATH/$pkgname"/manifest
	} || mod add/failed "Failed to install the pkg '$pkgname'!"
	;;

del)
	pkgname=$1

	cd "$THEPKG_PREFIX" || exit

	log "Removing the pkg '$pkgname'..."
	{
		# manifest should be in order sutable for removing:
		# files first, folders last
		# any program appending/modifing manifest file
		# should enshure that the order is correct
		while IFS= read -r file; do
			case $file in
				*/)
					rmdir "$file" 2>/dev/null || :
				;;
				*)
					rm "$file"
				;;
			esac
		done <"$THEPKG_DBPATH"/"$2"/manifest
		rm "$THEPKG_DBPATH"/"$2"/manifest
		rmdir "$THEPKG_DBPATH"/"$2"
	} || mod del/failed "Failed to remove the pkg '$pkgname'!"

esac
